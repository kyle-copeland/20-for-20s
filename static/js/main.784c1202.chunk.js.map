{"version":3,"sources":["data/events.js","Event.jsx","EventSection.jsx","App.js","serviceWorker.js","index.js"],"names":["date","description","podcast","location","time","moreInfo","details","console","log","formattedDate","Intl","DateTimeFormat","month","day","format","Date","className","href","events","Object","keys","map","key","event","pastEvents","upcomingEvents","forEach","now","eventDate","setDate","getDate","getTime","App","alt","src","EventSection","id","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.784c1202.chunk.js","sourcesContent":["export default {\r\n    'October': [{\r\n        date: 'Oct 1 2019',\r\n        description: 'Fall Session Kick-Off!',\r\n    }, {\r\n        date: 'Oct 8 2019',\r\n        description: 'The Sermon of the King',\r\n        podcast: 'https://realitycarpinteria.com/sermons/the-sermon-and-summons-of-the-king/'\r\n    }, {\r\n        date: 'Oct 13 2019',\r\n        description: '🍴 Church Picnic',\r\n        location: 'William Mason Park',\r\n        time: '10:30 AM',\r\n        moreInfo: 'https://gracefellowshipchurch.org/event/grace-all-church-picnic/5710'\r\n    }, {\r\n        date: 'Oct 15 2019',\r\n        description: 'God\\'s Good News',\r\n        podcast: 'https://realitycarpinteria.com/sermons/gods-good-news-for-the-unexpected-and-undeserving/'\r\n    }, {\r\n        date: 'Oct 22 2019',\r\n        description: 'Salt and Light',\r\n        podcast: 'https://realitycarpinteria.com/sermons/what-is-it-to-be-salt-and-light/'\r\n    }, {\r\n        date: 'Oct 29 2019',\r\n        description: '🎃 Halloween Event',\r\n        details: 'Bring a pumpkin for carving',\r\n    }],\r\n    'November': [{\r\n        date: 'Nov 5 2019',\r\n        description: 'How to Discuss'\r\n    }, {\r\n        date: 'Nov 12 2019',\r\n        description: 'God\\'s Law',\r\n        podcast: 'https://realitycarpinteria.com/sermons/getting-the-story-of-gods-law-right/'\r\n    }, {\r\n        date: 'Nov 19 2019',\r\n        location: 'TBD',\r\n        description: '🦃 Friendsgiving!',\r\n        time: 'TBD'\r\n    }],\r\n    'December': [{\r\n        date: 'Dec 3 2019',\r\n        description: 'The Lord\\'s Prayer',\r\n        podcast: 'https://realitycarpinteria.com/sermons/the-lords-prayer/'\r\n    }, {\r\n        date: 'Dec 10 2019',\r\n        description: 'Forgiving Others',\r\n        podcast: 'https://realitycarpinteria.com/sermons/forgiving-others-part-2/'\r\n    }, {\r\n        date: 'Dec 17 2019',\r\n        location: 'TBD',\r\n        description: '🎅 Christmas Event!',\r\n        time: 'TBD'\r\n    }], \r\n    'January': [ {\r\n        date: 'Jan 7 2020',\r\n        description: 'Fasting',\r\n        podcast: 'https://realitycarpinteria.com/sermons/the-reward-of-fasting/'\r\n    }, {\r\n        date: 'Jan 14 2020',\r\n        description: 'Problem with Treasure',\r\n        podcast: 'https://realitycarpinteria.com/sermons/the-problem-with-treasure/'\r\n    }, {\r\n        date: 'Jan 21 2020',\r\n        description: 'Elimination of Hurry',\r\n        podcast: 'https://podcasts.apple.com/us/podcast/the-ruthless-elimination-of-hurry/id84246334?i=1000455322506'\r\n    }, {\r\n        date: 'Jan 28 2020',\r\n        description: 'Digital Asceticism',\r\n        podcast: 'https://podcasts.apple.com/us/podcast/the-case-for-a-digital-asceticism/id84246334?i=1000456631843'\r\n    }],\r\n    'February': [ {\r\n        date: 'Feb 4 2020',\r\n        description: 'Social Event'\r\n    }, {\r\n        date: 'Feb 11 2020',\r\n        description: 'Jesus\\' Call to Community',\r\n        podcast: 'https://podcasts.apple.com/us/podcast/jesus-call-to-community/id84246334?i=1000444537520'\r\n    }, {\r\n        date: 'Feb 18 2020',\r\n        description: 'Family',\r\n        podcast: 'https://podcasts.apple.com/us/podcast/one-of-jesus-most-radical-ideas-family/id84246334?i=1000445079106'\r\n    }, {\r\n        date: 'Feb 25 2020',\r\n        description: 'Community in a Culture of Contempt',\r\n        podcast: 'https://podcasts.apple.com/us/podcast/a-community-of-honor-in-a-culture-of-contempt/id84246334?i=1000445600520'\r\n    }],\r\n    'March': [{\r\n        date: 'Mar 3 2020',\r\n        description: 'Socail Event'\r\n    },{\r\n        date: 'Mar 10 2020',\r\n        description: 'God & Sexuality',\r\n        podcast: 'https://podcasts.apple.com/us/podcast/god-sexuality/id84246334?i=1000431575429'\r\n    }, {\r\n        date: 'Mar 17 2020',\r\n        description: 'Sexual Formation',\r\n        podcast: 'https://podcasts.apple.com/us/podcast/sexual-formation/id84246334?i=1000432299261'\r\n    }, {\r\n        date: 'Mar 24 2020',\r\n        description: 'Singleness',\r\n        podcast: 'https://podcasts.apple.com/us/podcast/singleness/id84246334?i=1000432917152'\r\n    }, {\r\n        date: 'Mar 31 2020',\r\n        description: 'Marriage',\r\n        podcast: 'https://podcasts.apple.com/us/podcast/marriage/id84246334?i=1000432749772'\r\n    }],\r\n    'April': [{\r\n        date: 'Apr 7 2020',\r\n        description: 'Social Event'\r\n    }, {\r\n        date: 'Apr 14 2020',\r\n        description: 'This Cultural Moment - Part 1'\r\n    }, {\r\n        date: 'Apr 21 2020',\r\n        description: 'This Cultural Moment - Part 2'\r\n    }, {\r\n        date: 'Apr 28 2020',\r\n        description: 'This Cultural Moment - Part 3'\r\n    }],\r\n    'May': [{\r\n        date: 'May 5 2020',\r\n        description: 'Social Event'\r\n    }, {\r\n        date: 'May 12 2020',\r\n        description: 'This Cultural Moment - Part 4'\r\n    }, {\r\n        date: 'May 19 2020',\r\n        description: 'This Cultural Moment - Part 5'\r\n    }, {\r\n        date: 'May 26 2020',\r\n        description: 'Year-End Party'\r\n    }]\r\n\r\n}","import React from 'react';\r\n\r\nconst DEFAULT_TIME = '6:30pm';\r\nconst DEFAULT_LOCATION = '26 Burning Tree, Newport Beach';\r\n\r\nexport default ({date, location, description, time, podcast, moreInfo, details}) => {\r\n    console.log(date);\r\n    const formattedDate = new Intl.DateTimeFormat('en-US', {month: 'short', day: 'numeric'}).format(new Date(date)); \r\n    return (\r\n        <li className={'Event'}>\r\n            <div className=\"Event-start\">\r\n                <h4 className=\"Event-date u-no-margin\">\r\n                    {formattedDate}\r\n                </h4>\r\n                <p className=\"Event-time u-no-margin\">{time || DEFAULT_TIME}</p>\r\n            </div>\r\n            <div className=\"Event-main\">\r\n                <p className=\"Event-description u-no-margin\">{description}</p>\r\n                {details && <p className=\"Event-details u-no-margin\">{details}</p>}\r\n                <p className=\"Event-location u-no-margin\">{location || DEFAULT_LOCATION}</p>\r\n                {podcast && <a className=\"Event-podcast u-no-margin\" href={podcast}>Podcast</a>}\r\n                {moreInfo && <a className=\"Event-moreInfo u-no-margin\" href={moreInfo}>More Info</a>}\r\n            </div>\r\n        </li>\r\n    );\r\n}","import React from 'react';\r\nimport Event from './Event';\r\n\r\nexport default ({events}) => {\r\n    return Object.keys(events).map(month => {\r\n        return (\r\n            <div key={month}>\r\n            <h3 className=\"Month\">{month}</h3>\r\n            <ul className=\"Events\">\r\n                {events[month].map(event => {\r\n                    return <Event {...event} key={event.date} />\r\n                })}\r\n            </ul>\r\n        </div>\r\n        );\r\n    });\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport './Event.css';\nimport events from './data/events';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport EventSection from './EventSection';\n\nconst pastEvents = {};\nconst upcomingEvents = {};\n\nObject.keys(events).forEach(month => {\n  const now = Date.now();\n  events[month].forEach(event => {\n    const eventDate = new Date(event.date);\n    // Extend visibility of event to end of the day\n    eventDate.setDate(eventDate.getDate() + 1);\n    \n    if (eventDate.getTime() > now) {\n      upcomingEvents[month] =  upcomingEvents[month] ? [...upcomingEvents[month], event] : [event];\n    } else {\n      pastEvents[month] = pastEvents[month] ? [...pastEvents[month], event] : [event];\n    }\n  });\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img className=\"App-logo\"alt=\"20 for 20s\" src=\"/logo.png\" />\n      </header>\n      <main>\n        <div className=\"Panel\">\n           <p className=\"Panel-text\">Pursuing <span className=\"u-highlight\">community</span> in <span className=\"u-highlight\">the way</span> of <span className=\"u-highlight\">Jesus</span></p>\n           <img alt=\"leaves\" className=\"Panel-image\" src=\"/leaves.jpg\"/>\n        </div>\n        <div className=\"Banner\">\n          <div className=\"Banner-fade\"></div>\n          <p className=\"Banner-text\">Our goal is to provide a context for meaningful connections around good food and thoughtful, life-giving conversations. <a href=\"#about-us\">Learn more.</a></p>\n          \n        </div>\n        <h2>Schedule</h2>\n        <Tabs>\n          <TabList>\n            <Tab><h3>Upcoming Events</h3></Tab>\n            <Tab><h3>Past Events</h3></Tab>\n          </TabList>\n          <TabPanel>\n            <EventSection events={upcomingEvents} />\n          </TabPanel>\n          <TabPanel>\n            <EventSection events={pastEvents} />\n          </TabPanel>\n        </Tabs>\n        <div className=\"Banner Banner--about-us\">\n          <div className=\"Banner-fade\"></div>\n          <p className=\"Banner-text\">About 20 for 20's</p>\n        </div>\n        <div className=\"AboutUs\">\n          <h2 id=\"about-us\">What’s this all about?</h2>\n\n          <p>Simply put, our tagline says we’re about, “Pursuing Community in the Way of Jesus”.</p>\n\n          <p>What that means for us is that we desire to create a place and a context to gather together as young adults to explore what it means to live the “good life” properly understood. Jesus said, “I came so that they may have life and have it abundantly”.  20 for 20’s seeks to engage in a series of sincere and thoughtful discussions as we explore this ‘way’ of Jesus.</p>\n\n          <h2>What our gatherings look like</h2>\n\n          <p>Our gatherings are pretty simple. We meet in a lovely home, we gather around a table/s and enjoy a good meal together and we discuss what we’re thinking and learning about over the last week. Our discussions are based around podcasts we listen to during the week on our own time.</p>\n\n          <p>We want our gatherings to be about authentic community, that is, real conversations…honest, transparent, and a place where substantive friendships can be built and flourish.  We want to talk about the stuff of life, deal with hard questions we may have all in a safe environment as we seek to work it out together.</p>\n\n          <p>If all this sounds interesting and inviting to you, we would love for you to join us!</p>\n\n          <h2>When does this all happen?</h2>\n\n          <p>Tuesday evenings from 6:30 to around 9:00</p>\n\n          <h2 >Where do we meet?</h2>\n\n          <p>We are currently meeting in a home in Newport Beach (Big Canyon) at 26 Burning Tree, Newport Beach, CA 92660 (The Vance home).</p>\n        </div>\n        <div className=\"Banner Banner--contact\">\n          <div className=\"Banner-fade\"></div>\n          <p className=\"Banner-text\">\n            Interested? {''}\n            We'd love to have you.\n            Email us at <a href=\"mailto:20s@gracefellowshipchurch.org\">20s@gracefellowshipchurch.com</a>\n          </p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-tabs/style/react-tabs.css';\nimport './index.css';\nimport './overrides.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}